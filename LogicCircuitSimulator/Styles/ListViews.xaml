<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:LogicCircuitSimulator">







	

	<!-- Style for Windows.UI.Xaml.Controls.ListViewItem -->
	<Style TargetType="ListViewItem" x:Key="PartAddingListViewItemStyle">
		<Setter Property="FontFamily" Value="{StaticResource LatoThin}" />
		<Setter Property="FontSize" Value="{StaticResource FontSizeBig}" />
		<Setter Property="Background" Value="{StaticResource DarkBlue2Brush}"/>
		<Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Margin" Value="0 5"/>
		<Setter Property="BorderBrush" Value="{StaticResource BlackBrush}"/>
		<Setter Property="TabNavigation" Value="Local"/>
		<Setter Property="IsHoldingEnabled" Value="True"/>
		<Setter Property="Padding" Value="8 4"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
		<Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
		<Setter Property="UseSystemFocusVisuals" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListViewItem">
					<Grid x:Name="ContentBorder"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
											 Storyboard.TargetProperty="Opacity"
											 Duration="0"
											 To="1"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DarkBlue3Brush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightGrayBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>	
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
											 Storyboard.TargetProperty="Opacity"
											 Duration="0"
											 To="1"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GrayBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource WhiteBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<PointerDownThemeAnimation TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
											 Storyboard.TargetProperty="Opacity"
											 Duration="0:0:0"
											 To="1"/>
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
										 Storyboard.TargetProperty="Opacity"
										 Duration="0"
										 To="1"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource WhiteBrush30}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource WhiteBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
										 Storyboard.TargetProperty="Opacity"
										 Duration="0:0:0"
										 To="1"/>
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
											 Storyboard.TargetProperty="Opacity"
											 Duration="0"
											 To="1"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource WhiteBrush20}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource WhiteBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightGrayBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
											 Storyboard.TargetProperty="Opacity"
											 Duration="0:0:0"
											 To="1"/>
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
											 Storyboard.TargetProperty="Opacity"
											 Duration="0"
											 To="1"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GrayBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource WhiteBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource WhiteBrush40}" />
										</ObjectAnimationUsingKeyFrames>
										<PointerDownThemeAnimation TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ContentBorder"
                                 Storyboard.TargetProperty="Opacity"
                                 Duration="0"
                                 To="{ThemeResource ListViewItemDisabledThemeOpacity}"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="MultiSelectStates">
								<VisualState x:Name="MultiSelectDisabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform"
                                                Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="-32" KeySpline="0.1,0.9,0.2,1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform"
                                               Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="32" KeySpline="0.1,0.9,0.2,1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform"
                                               Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
											<SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
											<DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultiSelectEnabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform"
                                                Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32"/>
											<SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform"
                                               Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
											<SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform"
                                               Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32"/>
											<SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
											<DiscreteObjectKeyFrame KeyTime="0" Value="32,0,0,0" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DataVirtualizationStates">
								<VisualState x:Name="DataAvailable"/>
								<VisualState x:Name="DataPlaceholder">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ReorderHintStates">
								<VisualState x:Name="NoReorderHint"/>
								<VisualState x:Name="BottomReorderHint">
									<Storyboard>
										<DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Bottom" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopReorderHint">
									<Storyboard>
										<DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Top" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="RightReorderHint">
									<Storyboard>
										<DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Right" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="LeftReorderHint">
									<Storyboard>
										<DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Left" />
									</Storyboard>
								</VisualState>
								<VisualStateGroup.Transitions>
									<VisualTransition To="NoReorderHint" GeneratedDuration="0:0:0.2"/>
								</VisualStateGroup.Transitions>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DragStates">
								<VisualState x:Name="NotDragging" />
								<VisualState x:Name="Dragging">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ContentBorder"
                                 Storyboard.TargetProperty="Opacity"
                                 Duration="0"
                                 To="{ThemeResource ListViewItemDragThemeOpacity}" />
										<DragItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DraggingTarget">
									<Storyboard>
										<DropTargetItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingPrimary">
									<Storyboard>
										<!-- These two Opacity animations are required - the FadeInThemeAnimations
                                         on the same elements animate an internal Opacity. -->
										<DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayBackground"
                                 Storyboard.TargetProperty="Opacity"
                                 Duration="0"
                                 To="1" />
										<DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayText"
                                 Storyboard.TargetProperty="Opacity"
                                 Duration="0"
                                 To="1" />
										<DoubleAnimation Storyboard.TargetName="ContentBorder"
                                 Storyboard.TargetProperty="Opacity"
                                 Duration="0"
                                 To="{ThemeResource ListViewItemDragThemeOpacity}" />
										<FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
										<FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
										<DragItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingSecondary">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DraggedPlaceholder">
									<Storyboard>
										<FadeOutThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualStateGroup.Transitions>
									<VisualTransition To="NotDragging" GeneratedDuration="0:0:0.2"/>
								</VisualStateGroup.Transitions>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="BorderBackground"
							IsHitTestVisible="False"
							Fill="{StaticResource WhiteBrush20}"
							Opacity="0"
							Control.IsTemplateFocusTarget="True"/>
						<Grid x:Name="ContentPresenterGrid"
						  Background="Transparent"
						  Margin="0,0,0,0">
							<Grid.RenderTransform>
								<TranslateTransform x:Name="ContentPresenterTranslateTransform"/>
							</Grid.RenderTransform>
							<ContentPresenter x:Name="ContentPresenter"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Content="{TemplateBinding Content}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}"/>
						</Grid>
						<!-- The 'Xg' text simulates the amount of space one line of text will occupy.
                          In the DataPlaceholder state, the Content is not loaded yet so we
                          approximate the size of the item using placeholder text. -->
						<TextBlock x:Name="PlaceholderTextBlock"
							Opacity="0"
							Text="Xg"
							Foreground="{x:Null}"
							Margin="{TemplateBinding Padding}"
							IsHitTestVisible="False"
							AutomationProperties.AccessibilityView="Raw"/>
						<Rectangle x:Name="PlaceholderRect"
							Visibility="Collapsed"
							Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"/>
						<Rectangle x:Name="MultiArrangeOverlayBackground"
							IsHitTestVisible="False"
							Opacity="0"
							Fill="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
							Grid.ColumnSpan="2"/>
						<Border x:Name="MultiSelectSquare"
							BorderBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
							BorderThickness="2"
							Width="20"
							Height="20"
							Margin="12,0,0,0"
							VerticalAlignment="Center"
							HorizontalAlignment="Left"
							Visibility="Collapsed" >
							<Border.Clip>
								<RectangleGeometry Rect="0,0,20,20">
									<RectangleGeometry.Transform>
										<TranslateTransform x:Name="MultiSelectClipTransform"/>
									</RectangleGeometry.Transform>
								</RectangleGeometry>
							</Border.Clip>
							<Border.RenderTransform>
								<TranslateTransform x:Name="MultiSelectCheckBoxTransform"/>
							</Border.RenderTransform>
							<FontIcon x:Name="MultiSelectCheck"
							FontFamily="{ThemeResource SymbolThemeFontFamily}"
							Glyph="&#xE73E;"
							FontSize="16"
							Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
							Visibility="Collapsed"
							Opacity="0"/>
						</Border>
						<TextBlock x:Name="MultiArrangeOverlayText"
							Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}"
							Foreground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
							FontFamily="{ThemeResource ContentControlThemeFontFamily}"
							FontSize="26.667"
							IsHitTestVisible="False"
							Opacity="0"
							TextWrapping="Wrap"
							TextTrimming="WordEllipsis"
							Margin="18,9,0,0"
							AutomationProperties.AccessibilityView="Raw"
							Grid.ColumnSpan="2"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>




	<!-- Default style for Windows.UI.Xaml.Controls.ListView -->
	<Style TargetType="ListView" x:Key="PartAddingListViewStyle">
		<Setter Property="Margin" Value="0 0 10 0"/>
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="TabNavigation" Value="Once" />
		<Setter Property="IsSwipeEnabled" Value="True" />
		<Setter Property="IsItemClickEnabled" Value="True"/>
		<Setter Property="SelectionMode" Value="Single"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
		<Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
		<Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True" />
		<Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
		<Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
		<Setter Property="ItemContainerTransitions">
			<Setter.Value>
				<TransitionCollection>
					<AddDeleteThemeTransition />
					<ContentThemeTransition />
					<ReorderThemeTransition />
					<EntranceThemeTransition IsStaggeringEnabled="False" />
				</TransitionCollection>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<ItemsStackPanel Orientation="Vertical" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListView">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
						Background="{TemplateBinding Background}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<ScrollViewer x:Name="ScrollViewer"
                        TabNavigation="{TemplateBinding TabNavigation}"
                        HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                        IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                        VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                        IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                        IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                        IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                        ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                        IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                        BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                        AutomationProperties.AccessibilityView="Raw">
							<ItemsPresenter
								Header="{TemplateBinding Header}"
								HeaderTemplate="{TemplateBinding HeaderTemplate}"
								HeaderTransitions="{TemplateBinding HeaderTransitions}"
								Footer="{TemplateBinding Footer}"
								FooterTemplate="{TemplateBinding FooterTemplate}"
								FooterTransitions="{TemplateBinding FooterTransitions}"
								Padding="{TemplateBinding Padding}"/>
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>






</ResourceDictionary>
